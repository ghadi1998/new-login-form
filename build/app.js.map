{"version":3,"sources":["../server/app.js"],"names":["express","require","path","cors","bodyParser","helmet","cookieParser","CONFIG","app","use","req","res","next","setHeader","json","type","urlencoded","extended","options","static","join","__dirname","get","send","console","log","Users","err","Error","status","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,OAAMF,QAAQ,MAAR,CAAV;AACA,IAAIG,aAAWH,QAAQ,aAAR,CAAf;AACA,IAAII,SAAQJ,QAAQ,QAAR,CAAZ;AACA,IAAIK,eAAcL,QAAQ,eAAR,CAAlB;AACA,IAAIM,SAASN,QAAQ,kBAAR,CAAb;;AAIA,IAAMO,MAAMR,SAAZ;AACAQ,IAAIC,GAAJ,CAAQN,MAAR;;AAIA;AACAK,IAAIC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,MAAIE,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;AACAF,MAAIE,SAAJ,CAAc,8BAAd,EAA8C,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,KAAnC,CAA9C;AACAF,MAAIE,SAAJ,CAAc,8BAAd;AACAF,MAAIE,SAAJ,CAAc,+BAAd;AACAD;AACD,CAPD;;AASA;AACAJ,IAAIC,GAAJ,CAAQL,WAAWU,IAAX,EAAR;AACAN,IAAIC,GAAJ,CAAQL,WAAWU,IAAX,CAAgB,EAAEC,MAAM,kBAAR,EAAhB,CAAR;AACAP,IAAIC,GAAJ,CAAQL,WAAWY,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAT,IAAIC,GAAJ,CAAQH,cAAR;;AAEA;AACAE,IAAIC,GAAJ,CAAQJ,QAAR;AACA;;AAECG,IAAIU,OAAJ,CAAY,GAAZ,EAAiBf,MAAjB;;AAGD;AACAK,IAAIC,GAAJ,CAAQT,QAAQmB,MAAR,CAAe,UAAf,CAAR;AACAX,IAAIC,GAAJ,CAAQT,QAAQmB,MAAR,CAAejB,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AACAb,IAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIY,IAAJ,CAASvB,QAAQmB,MAAR,CAAejB,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAf,CAAT;AACD,CAFD;;AAIAG,QAAQC,GAAR,CAAY,cAAZ,EAA4BlB,OAAOC,GAAnC;;AAIA,IAAIkB,QAAQzB,QAAQ,gBAAR,CAAZ;AACAO,IAAIC,GAAJ,CAAQ,QAAR,EAAkBiB,KAAlB;;AAMAlB,IAAIC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMe,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAjB,OAAKe,GAAL;AACD,CAJD;;AAQCG,OAAOC,OAAP,GAAiBvB,GAAjB","file":"app.js","sourcesContent":["var express = require('express');\r\nvar path = require('path');\r\nvar cors= require('cors')\r\nvar bodyParser=require(\"body-parser\");\r\nvar helmet= require('helmet')\r\nvar cookieParser= require('cookie-parser')\r\nvar CONFIG = require('../config/CONFIG')\r\n\r\n\r\n\r\nconst app = express()\r\napp.use(cors())\r\n\r\n\r\n\r\n//headers\r\napp.use((req, res, next) => {\r\n  res.setHeader('Access-Control-Allow-Origin', '*');\r\n  res.setHeader('Access-Control-Allow-Credentials', true);\r\n  res.setHeader('Access-Control-Allow-Methods', ['PATCH', 'POST', 'GET', 'DELETE', 'PUT']);\r\n  res.setHeader('Access-Control-Allow-Headers')\r\n  res.setHeader('Access-Control-Expose-Headers')\r\n  next();\r\n});\r\n\r\n//body parser for form data\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.json({ type: 'application/json' }))\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(cookieParser())\r\n\r\n// secure apps by setting various HTTP headers\r\napp.use(helmet())\r\n// enable CORS - Cross Origin Resource Sharing\r\n\r\n app.options('*', cors()); \r\n\r\n\r\n//fetching index from react\r\napp.use(express.static('./build/'));\r\napp.use(express.static(path.join(__dirname, './client/build')));\r\napp.get('*', (req, res) => {\r\n  res.send(express.static(path.join(__dirname, './client/build/index.html')))  ;\r\n});\r\n\r\nconsole.log(\"Environment:\", CONFIG.app)\r\n\r\n\r\n\r\nvar Users = require('./routes/Users')\r\napp.use('/users', Users)\r\n\r\n \r\n \r\n\r\n\r\napp.use((req, res, next) => {\r\n  const err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n  \r\n\r\n module.exports = app"]}